#include "ServiceMode.h"

AsyncWebServer server(80);
AsyncWebSocket ws("/ws");
int wsClientCount = 0;

size_t totalSize = 0;
size_t receivedSize = 0;
bool otaStarted = false;
unsigned long lastProgressUpdate = 0;
static std::vector<uint8_t> accumulatedData;
static size_t expectedChunkSize = 1024;

void ServiceMode::initWifi()
{
    const char *ssid = "Tutejshy AP";
    const char *password = "123456789";
    WiFi.mode(WIFI_AP);
    WiFi.softAP(ssid, password, 12, 0, 1);

    IPAddress local_IP(192, 168, 4, 1);
    IPAddress gateway(192, 168, 4, 1);
    IPAddress subnet(255, 255, 255, 0);
    WiFi.softAPConfig(local_IP, gateway, subnet);
}

void sendWsMessage(AsyncWebSocketClient *client, const String &message)
{
    if (client) {
        client->text(message);
    }
}

void onWsEvent(AsyncWebSocket *server, AsyncWebSocketClient *client, AwsEventType type, void *arg, uint8_t *data, size_t len)
{
    if (type == WS_EVT_CONNECT) {
        wsClientCount++;
    } else if (type == WS_EVT_DISCONNECT) {
         wsClientCount--;

        otaStarted = false;
        accumulatedData.clear();
        Update.abort();

    } else if (type == WS_EVT_DATA) {
        AwsFrameInfo *info = (AwsFrameInfo *)arg;
        if (info->opcode == WS_TEXT) {
            String message = String((char *)data).substring(0, len);
            if (message.startsWith("start_ota:")) {
                totalSize = message.substring(10).toInt();
                receivedSize = 0;
                otaStarted = true;

                if (!Update.begin(UPDATE_SIZE_UNKNOWN)) {
                    Serial.println("OTA Begin Failed");
                    sendWsMessage(client, "ota_error:begin_failed");
                } else {
                    Serial.printf("OTA Started, expecting %u bytes\n", totalSize);
                    sendWsMessage(client, "ota_ready_for_chunk");
                }
            } else if (message.startsWith("cancel_ota")) {
                Update.abort();
                otaStarted = false;
                Serial.println("OTA Update Canceled");
                sendWsMessage(client, "ota_canceled");
            } else if (message == "ota_end") {
                if (receivedSize + accumulatedData.size() == totalSize) {
                    size_t chunkSize = accumulatedData.size();
                    if (Update.write(accumulatedData.data(), chunkSize) == chunkSize) {
                        receivedSize += chunkSize;
                        accumulatedData.clear();

                        if (Update.end(true)) {
                            Serial.println("OTA Success, Rebooting...");
                            sendWsMessage(client, "ota_success");
                            delay(1000);
                            ESP.restart();
                        } else {
                            Update.printError(Serial);
                            sendWsMessage(client, "ota_error:end_failed");
                        }
                    } else {
                        Update.printError(Serial);
                        sendWsMessage(client, "ota_error:write_failed");
                    }
                } else {
                    sendWsMessage(client, "ota_error:size_mismatch");
                }
            }
        } else if (info->opcode == WS_BINARY && otaStarted) {
            accumulatedData.insert(accumulatedData.end(), data, data + len);

            if (accumulatedData.size() >= expectedChunkSize) {
                size_t chunkSize = accumulatedData.size();
                if (Update.write(accumulatedData.data(), chunkSize) == chunkSize) {
                    receivedSize += chunkSize;
                    accumulatedData.clear();

                    unsigned long currentTime = millis();
                    float progress = (receivedSize * 100.0) / totalSize;
                    if (currentTime - lastProgressUpdate >= 1000 || receivedSize == totalSize) {
                        lastProgressUpdate = currentTime;
                        Serial.printf("Received %u/%u bytes\n", receivedSize, totalSize);
                        sendWsMessage(client, "progress:" + String(progress, 1));
                    }

                    sendWsMessage(client, "ota_ready_for_chunk");
                } else {
                    Update.printError(Serial);
                    sendWsMessage(client, "ota_error:write_failed");
                }
            }
        }
    }
}

void ServiceMode::serveWebPage()
{
    static const uint8_t serverIndex[] PROGMEM = {
        31,  139, 8,   0,   131, 243, 237, 102, 0,   255, 157, 89,  11,  115, 219, 54,  151, 253, 43,  12,  221, 36,  226, 70,  162, 37,  59,  78,  92,  42,  116, 55,  205, 151,
        204, 238, 76,  51,  205, 196, 233, 116, 102, 189, 94,  7,   34,  65,  9,   13,  69,  112, 1,   208, 178, 171, 240, 191, 247, 92,  0,   148, 40,  249, 177, 153, 149, 70,
        18,  31,  184, 175, 115, 159, 160, 222, 60,  201, 101, 102, 110, 107, 30,  44,  204, 178, 60,  123, 67,  223, 65,  201, 170, 121, 26,  242, 42,  196, 57,  103, 249, 217,
        155, 37,  55,  44,  200, 22,  76,  105, 110, 210, 176, 49,  197, 232, 20,  247, 236, 213, 138, 45,  121, 26,  94,  11,  190, 170, 165, 50,  97,  144, 201, 202, 240, 10,
        171, 86,  34,  55,  139, 52,  231, 215, 34,  227, 35,  123, 50,  20,  149, 48,  130, 149, 35,  157, 177, 146, 167, 19,  176, 208, 230, 182, 228, 103, 255, 182, 46,  64,
        53,  42,  216, 82,  148, 183, 201, 71,  89,  177, 76,  14,  151, 178, 146, 186, 102, 25,  111, 23,  147, 117, 38,  75,  169, 146, 131, 217, 9,   63,  61,  57,  158, 218,
        213, 90,  252, 205, 147, 227, 113, 125, 51,  53,  252, 198, 140, 88,  41,  230, 85,  146, 65,  52,  87,  237, 226, 120, 189, 100, 106, 46,  170, 209, 76,  26,  35,  151,
        201, 184, 157, 201, 252, 118, 61,  99,  217, 183, 185, 146, 77,  149, 39,  7,   19,  70,  239, 169, 91,  151, 140, 167, 53,  203, 115, 81,  205, 113, 228, 133, 21,  69,
        209, 198, 222, 28,  176, 187, 113, 70,  36,  167, 99,  146, 233, 201, 142, 112, 28,  176, 198, 200, 45,  121, 64,  215, 166, 51,  121, 67,  26,  210, 149, 153, 84,  57,
        87,  208, 228, 166, 141, 121, 46,  140, 84,  107, 199, 105, 50,  30,  63,  157, 238, 168, 116, 68,  239, 158, 124, 176, 33,  218, 100, 2,   41,  90,  150, 34,  15,  14,
        198, 227, 177, 99,  190, 96,  185, 92,  65,  220, 132, 84,  176, 95,  71,  248, 208, 253, 227, 141, 50,  143, 169, 82,  138, 138, 175, 115, 161, 235, 146, 221, 38,  69,
        201, 111, 166, 127, 53,  218, 136, 226, 118, 228, 109, 78,  44,  250, 163, 25,  55,  43,  206, 171, 169, 5,   120, 36,  12,  95,  106, 187, 124, 164, 13,  83,  102, 35,
        202, 106, 48,  110, 227, 154, 41,  182, 220, 243, 151, 55,  247, 100, 207, 89,  37,  47,  76,  27,  95,  103, 107, 203, 14,  32,  172, 146, 201, 116, 71,  35,  123, 35,
        23,  138, 103, 70,  72,  120, 87,  150, 205, 178, 2,   9,   43,  27,  142, 104, 170, 27,  115, 65,  177, 155, 22,  162, 228, 151, 253, 11,  53,  211, 122, 5,   99,  119,
        46,  146, 232, 203, 161, 230, 37,  216, 249, 31,  199, 234, 65,  127, 184, 16,  121, 212, 31,  222, 196, 62,  12,  15,  32,  190, 175, 175, 151, 122, 100, 97,  89,  112,
        49,  95,  152, 228, 248, 4,   199, 29,  175, 215, 222, 177, 119, 40,  147, 132, 126, 70,  206, 4,   9,   238, 13,  130, 188, 186, 47,  186, 119, 253, 224, 181, 31,  255,
        32,  195, 100, 33,  175, 185, 218, 97,  235, 25,  121, 182, 157, 144, 70,  105, 156, 214, 82,  216, 228, 139, 141, 168, 187, 0,   120, 149, 205, 114, 158, 245, 18,  118,
        130, 32,  245, 201, 51,  50,  178, 78,  200, 222, 45,  250, 150, 54,  22,  21,  188, 34,  242, 142, 7,   73,  60,  57,  238, 235, 236, 212, 219, 241, 173, 67,  116, 87,
        147, 190, 28,  202, 132, 123, 88,  252, 48,  102, 119, 61,  222, 247, 216, 182, 58,  28,  83,  117, 184, 71,  208, 15,  98,  137, 252, 153, 101, 187, 89,  217, 207, 59,
        87,  222, 250, 118, 217, 248, 0,   81,  63,  132, 189, 102, 46,  249, 55,  2,   145, 214, 86,  80,  158, 231, 222, 168, 145, 98,  185, 104, 180, 139, 89,  82,  175, 40,
        145, 130, 11,  145, 231, 72,  247, 90,  106, 20,  107, 4,   129, 226, 37,  51,  226, 154, 147, 148, 194, 139, 25,  119, 50,  246, 82,  166, 147, 225, 77,  51,  138, 85,
        158, 139, 165, 11,  226, 35,  13,  54,  117, 87,  156, 169, 0,   56,  233, 247, 212, 247, 149, 147, 240, 26,  245, 110, 181, 128, 249, 35,  91,  142, 146, 74,  174, 20,
        171, 219, 216, 169, 185, 129, 170, 146, 21,  52,  220, 199, 238, 241, 138, 182, 31,  30,  32,  15,  238, 9,   145, 173, 115, 95,  158, 62,  109, 15,  26,  189, 163, 62,
        21,  255, 246, 64,  150, 235, 13,  96,  133, 184, 225, 249, 148, 184, 142, 167, 118, 9,   12,  184, 227, 156, 253, 90,  163, 230, 51,  54,  24,  15,  233, 29,  159, 68,
        211, 191, 71,  162, 202, 249, 13,  45,  67,  63,  114, 81,  93,  73,  42,  156, 112, 17,  207, 219, 131, 172, 24,  218, 80,  185, 227, 166, 62,  233, 164, 253, 247, 37,
        58,  14,  11,  6,   91,  27,  94,  189, 130, 169, 209, 218, 149, 127, 91,  95,  9,   207, 132, 190, 238, 192, 181, 45,  243, 190, 174, 15,  169, 90,  247, 210, 181, 125,
        115, 232, 58,  248, 155, 67,  55,  40,  80,  151, 197, 208, 48,  57,  59,  231, 138, 26,  127, 240, 81,  230, 28,  55,  39,  103, 111, 114, 113, 29,  100, 37,  234, 114,
        26,  122, 254, 232, 255, 22,  238, 192, 194, 29,  58,  188, 195, 64,  228, 105, 168, 155, 48,  176, 165, 57,  13,  255, 168, 115, 102, 120, 240, 65,  168, 229, 138, 41,
        14,  162, 67,  176, 186, 143, 95,  224, 98,  194, 113, 40,  52,  77,  47,  199, 103, 29,  93,  240, 71,  93,  74,  150, 67,  151, 227, 93,  177, 84,  57,  60,  73,  17,
        6,   44,  203, 120, 141, 233, 37,  158, 9,   140, 63,  193, 131, 10,  54,  88,  187, 81,  144, 24,  247, 21,  236, 169, 6,   31,  237, 168, 85,  207, 246, 239, 239, 159,
        23,  27,  11,  239, 216, 89,  215, 225, 217, 248, 233, 206, 221, 135, 244, 203, 160, 159, 167, 234, 196, 123, 117, 223, 177, 42,  227, 229, 70,  93,  224, 66,  248, 62,
        2,   171, 195, 241, 61,  38,  151, 224, 156, 27,  131, 206, 164, 29,  138, 180, 148, 100, 185, 161, 102, 35,  207, 159, 222, 195, 112, 150, 61,  226, 114, 149, 109, 84,
        252, 204, 49,  103, 6,   239, 100, 85,  136, 249, 163, 78,  208, 251, 81,  210, 41,  120, 15,  134, 68,  32,  203, 125, 84,  186, 21,  58,  83,  162, 54,  103, 48,  89,
        67,  82,  122, 17,  162, 144, 135, 195, 112, 114, 100, 127, 142, 94,  218, 159, 151, 152, 253, 240, 243, 243, 43,  119, 239, 103, 119, 243, 248, 212, 221, 61,  121, 237,
        174, 191, 126, 121, 122, 106, 239, 79,  78,  60,  245, 241, 216, 173, 64,  171, 199, 43,  188, 68,  185, 35,  49,  101, 138, 92,  42,  196, 213, 18,  57,  146, 172, 209,
        249, 146, 240, 79,  241, 65,  4,   116, 30,  100, 172, 10,  102, 60,  224, 194, 44,  184, 10,  158, 179, 250, 121, 80,  72,  21,  188, 69,  124, 106, 29,  124, 162, 14,
        23,  224, 252, 121, 86,  10,  248, 232, 121, 28,  14,  109, 211, 4,   8,   9,   79,  207, 46,  66,  86,  67,  160, 187, 25,  94,  162, 165, 102, 101, 147, 115, 61,  224,
        209, 144, 112, 76,  66,  215, 235, 195, 161, 172, 169, 124, 232, 100, 143, 162, 29,  106, 45,  114, 175, 213, 249, 249, 127, 254, 43,  144, 69,  0,   85,  2,   171, 97,
        133, 10,  42,  213, 183, 61,  161, 60,  46,  121, 53,  55,  139, 179, 177, 151, 65,  3,   87,  216, 14,  187, 97,  204, 115, 251, 136, 42,  67,  166, 49,  32,  192, 25,
        142, 79,  237, 214, 130, 101, 104, 109, 250, 33,  150, 233, 233, 46,  79,  205, 21,  118, 18,  87,  51,  214, 228, 87,  138, 22,  59,  222, 191, 226, 60,  160, 115, 11,
        150, 91,  4,   60,  177, 239, 64,  68,  238, 112, 54,  63,  128, 137, 105, 91,  239, 170, 44,  5,   201, 186, 68,  84,  86,  105, 213, 148, 229, 84,  20,  3,   162, 1,
        40,  60,  77,  81,  175, 140, 66,  216, 133, 17,  102, 22,  23,  64,  60,  38,  155, 222, 154, 193, 56,  162, 251, 7,   225, 247, 239, 135, 255, 115, 193, 70,  127, 191,
        29,  253, 215, 120, 244, 243, 213, 232, 242, 197, 79,  135, 177, 225, 218, 64,  252, 180, 74,  177, 11,  107, 150, 64,  62,  254, 223, 134, 171, 219, 115, 63,  136, 13,
        204, 179, 103, 61,  78,  79,  44,  167, 95,  190, 30,  252, 180, 230, 237, 215, 132, 71,  45,  47,  53,  15,  160, 11,  190, 32,  151, 50,  27,  26,  253, 199, 151, 143,
        191, 189, 47,  57,  177, 139, 214, 85,  202, 91,  197, 77,  163, 170, 53,  47,  147, 106, 136, 184, 231, 131, 104, 13,  154, 42,  170, 98,  155, 12,  191, 9,   109, 98,
        204, 156, 131, 46,  41,  162, 169, 163, 128, 195, 133, 6,   214, 11,  185, 186, 143, 68,  241, 37,  166, 134, 135, 168, 100, 53,  224, 67,  40,  224, 201, 192, 255, 253,
        53,  52,  34,  74,  94,  113, 101, 111, 238, 82,  144, 107, 129, 70,  71,  65,  167, 168, 1,   118, 55,  201, 119, 87,  102, 26,  94,  235, 49,  183, 77,  232, 130, 95,
        166, 102, 119, 29,  132, 190, 35,  117, 123, 92,  119, 45,  6,   246, 59,  4,   206, 164, 135, 105, 188, 201, 251, 100, 153, 226, 8,   43,  162, 240, 151, 179, 193, 198,
        161, 238, 158, 247, 7,   150, 68,  80,  171, 174, 121, 69,  194, 55,  224, 216, 11,  239, 22,  162, 196, 213, 152, 151, 223, 191, 239, 73,  64,  32,  82,  240, 229, 233,
        218, 29,  232, 161, 24,  178, 116, 60,  84,  233, 100, 124, 244, 114, 40,  211, 241, 180, 104, 42,  187, 75,  10,  42,  248, 202, 133, 161, 76,  179, 65,  87,  142, 35,
        176, 157, 74,  4,   61,  176, 167, 0,   73,  195, 112, 250, 251, 236, 47,  218, 3,   65,  47,  37,  144, 7,   121, 20,  35,  107, 222, 179, 108, 49,  24,  92,  240, 97,
        117, 25,  33,  230, 187, 128, 206, 6,   145, 55,  101, 16,  162, 98,  130, 223, 6,   220, 208, 206, 6,   184, 226, 29,  232, 52,  164, 20,  41,  225, 147, 216, 214, 109,
        202, 17,  151, 93,  209, 90,  239, 48,  235, 46,  247, 248, 217, 154, 142, 120, 178, 228, 62,  25,  55,  170, 81,  34,  222, 167, 148, 91,  183, 213, 130, 236, 213, 30,
        217, 1,   66,  141, 178, 4,   106, 84,  145, 137, 157, 72,  158, 167, 70,  53,  188, 117, 89,  180, 167, 149, 109, 57,  247, 41,  21,  83,  236, 133, 100, 19,  170, 165,
        45,  70,  17,  196, 240, 210, 237, 36,  211, 202, 157, 160, 202, 48,  244, 48,  55,  53,  33,  3,   157, 194, 226, 81,  20,  81,  192, 58,  237, 29,  110, 162, 142, 124,
        249, 97,  143, 18,  94,  103, 116, 234, 12,  37,  233, 155, 19,  65,  39,  158, 133, 122, 148, 5,   77,  131, 91,  38,  8,   137, 45,  19,  102, 153, 232, 24,  249, 28,
        206, 202, 6,   101, 116, 64,  113, 145, 83,  186, 109, 13,  159, 94,  35,  33,  233, 116, 104, 133, 182, 17,  98,  173, 31,  213, 202, 93,  109, 55,  81,  74,  69,  8,
        209, 137, 142, 28,  197, 174, 192, 56,  211, 67,  164, 124, 69,  251, 125, 42,  167, 83,  157, 86,  124, 21,  252, 201, 103, 231, 50,  251, 198, 113, 119, 165, 147, 195,
        67,  116, 222, 120, 242, 234, 52,  126, 25,  79,  14,  87,  218, 58,  0,   15,  139, 32,  44,  181, 170, 129, 45,  166, 191, 142, 237, 20,  167, 24,  39,  35,  218, 49,
        64,  232, 180, 25,  68,  173, 37,  200, 74,  169, 57,  76,  192, 206, 65,  41,  169, 28,  45,  30,  76,  41,  136, 249, 151, 125, 108, 21,  8,   29,  96,  234, 14,  216,
        53,  19,  37,  155, 149, 60,  14,  62,  81,  203, 226, 129, 81,  183, 1,   155, 51,  81,  197, 144, 222, 201, 243, 2,   58,  121, 94,  252, 70,  222, 18,  141, 155, 205,
        185, 237, 36,  219, 54,  65,  145, 226, 93,  132, 82,  77,  125, 201, 14,  220, 250, 79,  52,  126, 202, 37,  170, 16,  128, 201, 176, 43,  184, 46,  191, 189, 66,  26,
        92,  101, 139, 166, 250, 22,  70,  209, 186, 0,   239, 174, 5,   96,  85,  173, 228, 92,  65,  74,  66,  247, 28,  79,  141, 71,  33,  120, 106, 247, 1,   35,  170, 129,
        95,  177, 55,  18,  48,  15,  11,  46,  38,  151, 209, 180, 30,  232, 29,  6,   36,  70,  55,  118, 196, 32,  22,  245, 0,   83,  126, 132, 29,  168, 197, 228, 247, 47,
        111, 253, 176, 136, 209, 108, 89,  35,  201, 249, 147, 224, 51,  159, 73,  73,  206, 138, 99,  130, 130, 140, 221, 227, 103, 193, 37,  110, 158, 205, 123, 58,  79,  130,
        240, 197, 29,  109, 238, 33,  198, 20,  132, 97,  149, 231, 61,  250, 190, 26,  254, 110, 39,  185, 221, 134, 23,  144, 241, 8,   240, 244, 35,  51,  139, 120, 41,  170,
        129, 26,  178, 145, 116, 229, 201, 216, 192, 250, 128, 217, 255, 51,  96,  197, 158, 218, 245, 118, 17,  235, 18,  142, 31,  200, 161, 124, 1,   240, 13,  220, 70,  195,
        125, 218, 241, 5,   87,  141, 242, 97,  115, 4,   72,  55,  37,  10,  139, 124, 129, 246, 4,   149, 229, 89,  202, 54,  183, 157, 233, 21,  20,  71,  233, 166, 181, 44,
        127, 171, 223, 42,  197, 110, 127, 109, 138, 2,   237, 175, 234, 229, 2,   116, 95,  11,  55,  87,  160, 168, 79,  169, 154, 11,  77,  59,  40,  174, 72,  187, 219, 15,
        82,  189, 35,  151, 167, 5,   3,   60,  240, 26,  156, 130, 40,  195, 140, 223, 15,  58,  108, 37,  250, 167, 54,  179, 220, 169, 207, 44,  232, 178, 17,  89,  83,  247,
        193, 42,  218, 212, 119, 69,  205, 110, 236, 194, 33,  127, 17,  62,  117, 81,  141, 173, 250, 166, 158, 218, 139, 237, 188, 23,  223, 84,  16,  48,  46,  102, 223, 64,
        178, 213, 167, 119, 149, 18,  10,  62,  40,  176, 211, 24,  132, 111, 177, 213, 184, 149, 77,  160, 27,  127, 176, 98,  152, 96,  141, 164, 65,  151, 246, 35,  52,  91,
        210, 74,  187, 39,  105, 172, 127, 127, 9,   163, 103, 207, 58,  60,  221, 178, 43,  192, 138, 88,  32,  105, 216, 129, 221, 145, 182, 113, 57,  165, 36,  221, 71,  15,
        160, 186, 31,  211, 38,  79,  251, 89,  18,  77,  96,  28,  249, 230, 234, 99,  202, 103, 181, 235, 11,  1,   219, 42,  66,  116, 62,  197, 45,  188, 219, 146, 210, 43,
        92,  83,  36,  170, 147, 112, 49,  190, 164, 210, 183, 65,  153, 50,  24,  158, 229, 112, 43,  143, 233, 249, 23,  10,  129, 51,  199, 38,  57,  89,  147, 132, 47,  216,
        22,  61,  199, 112, 235, 38,  224, 189, 46,  184, 65,  219, 11,  23,  198, 212, 123, 181, 111, 206, 205, 149, 5,   24,  165, 50,  6,   128, 152, 184, 104, 100, 182, 14,
        139, 182, 87,  214, 57,  73,  119, 185, 246, 223, 212, 33,  21,  207, 27,  4,   185, 29,  161, 58,  208, 46,  170, 161, 198, 252, 212, 173, 75,  97,  52,  165, 33,  28,
        16,  241, 11,  12,  99,  74,  44,  7,   17,  85,  124, 119, 212, 77,  39,  188, 29,  174, 97,  49,  18,  163, 141, 46,  224, 36,  168, 26,  94,  14,  136, 163, 4,   114,
        54,  247, 123, 230, 80,  147, 48,  195, 106, 91,  156, 108, 163, 235, 198, 114, 228, 148, 237, 37,  78,  242, 206, 220, 101, 228, 124, 94,  218, 182, 108, 23,  135, 195,
        39,  122, 163, 130, 222, 242, 135, 98,  221, 4,   182, 55,  219, 160, 159, 109, 173, 190, 128, 14,  189, 225, 134, 58,  255, 87,  247, 224, 135, 170, 241, 200, 53,  237,
        240, 167, 181, 105, 195, 203, 175, 93,  16,  233, 78,  107, 1,   16,  42,  64,  236, 71,  186, 115, 49,  67,  247, 156, 111, 58,  117, 181, 181, 71,  111, 236, 121, 212,
        20,  248, 191, 67,  243, 217, 51,  230, 167, 117, 66,  150, 198, 147, 168, 165, 88,  167, 246, 178, 31,  235, 208, 233, 9,   12,  190, 63,  148, 51,  169, 232, 169, 185,
        77,  171, 5,   158, 56,  225, 33,  226, 2,   19,  15,  2,   154, 151, 57,  118, 89,  221, 88,  128, 237, 12,  234, 224, 31,  159, 127, 59,  231, 76,  101, 139, 79,  100,
        186, 254, 63,  6,   67,  67,  216, 117, 67,  171, 13,  34,  132, 252, 131, 65,  138, 49,  168, 11,  210, 225, 26,  127, 25,  45,  100, 158, 132, 159, 126, 63,  255, 18,
        14,  233, 153, 17,  246, 124, 201, 154, 154, 62,  205, 249, 163, 47,  52,  87,  37,  216, 138, 34,  10,  17,  76,  240, 233, 33,  30,  80,  173, 86,  35,  200, 95,  142,
        26,  133, 12,  206, 176, 59,  206, 177, 3,   164, 71,  77,  9,   2,   83,  158, 219, 189, 23,  5,   224, 54,  226, 29,  24,  60,  150, 223, 126, 9,   187, 103, 2,   129,
        102, 215, 64,  192, 247, 183, 2,   213, 246, 54,  134, 172, 15,  232, 237, 184, 140, 74,  68,  247, 81,  3,   220, 106, 130, 200, 50,  125, 48,  170, 109, 214, 226, 169,
        197, 255, 163, 230, 161, 117, 80,  15,  130, 111, 28,  50,  13,  182, 172, 20,  191, 184, 149, 243, 130, 161, 173, 108, 244, 176, 69,  16,  53,  161, 87,  85,  104, 51,
        246, 48,  222, 150, 247, 221, 178, 64,  225, 66,  120, 108, 250, 168, 123, 188, 210, 73,  94,  48,  141, 61,  57,  175, 58,  213, 238, 42,  210, 1,   98,  135, 101, 207,
        99,  139, 157, 35,  219, 177, 6,   4,   109, 31,  62,  40,  177, 131, 160, 31,  5,   28,  41,  137, 216, 37,  79,  168, 173, 68,  244, 132, 209, 61,  154, 121, 115, 232,
        30,  46,  30,  218, 63,  42,  255, 1,   138, 96,  215, 90,  184, 28,  0,   0};

    DefaultHeaders::Instance().addHeader("Access-Control-Allow-Origin", "*");
    DefaultHeaders::Instance().addHeader("Access-Control-Allow-Methods", "GET, POST, PUT, DELETE, OPTIONS");
    DefaultHeaders::Instance().addHeader("Access-Control-Allow-Headers", "Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");

    server.on("/", HTTP_GET, [](AsyncWebServerRequest *request) {
        AsyncWebServerResponse *response = request->beginResponse_P(200, "text/html", serverIndex, sizeof(serverIndex));
        response->addHeader("Content-Encoding", "gzip");
        request->send(response);
    });

    server.on("/reset_config", HTTP_GET, [](AsyncWebServerRequest *request) {
        ConfigManager::resetConfigToDefault();
        request->send(204, "text/plain", "");
    });

    server.on("/get_config", HTTP_GET, [](AsyncWebServerRequest *request) {
        String configData = ConfigManager::getPlainConfig();

        if (configData.isEmpty()) {
            request->send(500, "text/plain", "Failed to read config");
        } else {
            request->send(200, "text/plain", configData);
        }
    });

    server.on("/set_config", HTTP_POST, [](AsyncWebServerRequest *request) {
        String configData = "";

        int params = request->params();
        for (int i = 0; i < params; i++) {
            AsyncWebParameter *p = request->getParam(i);
            configData += p->name() + "=" + p->value() + "\n";
        }

        if (ConfigManager::saveConfig(configData)) {
            request->send(200, "text/plain", "Settings saved successfully.");
        } else {
            request->send(500, "text/plain", "Failed to save settings.");
        }
    });

    ws.onEvent(onWsEvent);
    server.addHandler(&ws);

    server.begin();
}

void ServiceMode::serviceModeStart()
{
    Serial.println("Starting Service mode");

    Serial.println("Starting Wi-Fi Access Point");
    initWifi();
    Serial.println(WiFi.softAPIP());

    Serial.println("Starting Web Server");
    serveWebPage();
    Serial.println("Service mode on");
}